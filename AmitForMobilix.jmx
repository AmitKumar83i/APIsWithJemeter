<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1531833037000</longProp>
        <longProp name="ThreadGroup.end_time">1531833037000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="APIKey" elementType="Argument">
              <stringProp name="Argument.name">APIKey</stringProp>
              <stringProp name="Argument.value">TZAeanS9bEuKyGMF7LRqqgf_LcEnAGZ0S_JV9MGBD6EAQKvsrZc-A0OuuPUn_cCC2QmpIAzifWdU2157PlMWYMXw</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="URL" elementType="Argument">
              <stringProp name="Argument.name">URL</stringProp>
              <stringProp name="Argument.value">beta3secure.mobelisk.net/mobelisk-web-sensor</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="protocol" elementType="Argument">
              <stringProp name="Argument.name">protocol</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="serialNumber" elementType="Argument">
              <stringProp name="Argument.name">serialNumber</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="secretKey" elementType="Argument">
              <stringProp name="Argument.name">secretKey</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="clientId" elementType="Argument">
              <stringProp name="Argument.name">clientId</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="clientSecret" elementType="Argument">
              <stringProp name="Argument.name">clientSecret</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="mqttURL" elementType="Argument">
              <stringProp name="Argument.name">mqttURL</stringProp>
              <stringProp name="Argument.value">beta3mqtt.mobelisk.net</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="mqttPortNum" elementType="Argument">
              <stringProp name="Argument.name">mqttPortNum</stringProp>
              <stringProp name="Argument.value">1883</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="mqttJksFile" elementType="Argument">
              <stringProp name="Argument.name">mqttJksFile</stringProp>
              <stringProp name="Argument.value">C:\TestData\emqtt.jks</stringProp>
              <stringProp name="Argument.desc">MQTT JKS file</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="mqttP12" elementType="Argument">
              <stringProp name="Argument.name">mqttP12</stringProp>
              <stringProp name="Argument.value">C:\TestData\client.p12</stringProp>
              <stringProp name="Argument.desc">MQTT P12 file</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="mqttSecret" elementType="Argument">
              <stringProp name="Argument.name">mqttSecret</stringProp>
              <stringProp name="Argument.value">Mobelisk</stringProp>
              <stringProp name="Argument.desc">MQTT Secret value</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="mqttUsername" elementType="Argument">
              <stringProp name="Argument.name">mqttUsername</stringProp>
              <stringProp name="Argument.value">mobelisk</stringProp>
              <stringProp name="Argument.desc">MQTT Username</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="mqttConnectionClientid" elementType="Argument">
              <stringProp name="Argument.name">mqttConnectionClientid</stringProp>
              <stringProp name="Argument.value">mobelisk-</stringProp>
              <stringProp name="Argument.desc">MQTT Client id</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">C:\TestData\Test(1).csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">serialNumber,secretKey,clientId,clientSecret</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sensor Login" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="test" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">test</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">test</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">oauth/token?grant_type=password&amp;client_id=${clientId}&amp;client_secret=${clientSecret}&amp;serialNo=${serialNumber}&amp;secretKey=${secretKey}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">access_token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Scope.variable">Token</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">12367</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="LiveFeed_IMU" enabled="true">
          <stringProp name="mqtt.keystore_file_path">${mqttJksFile}</stringProp>
          <stringProp name="mqtt.clientcert_file_path">${mqttP12}</stringProp>
          <stringProp name="mqtt.conn_keep_alive">20</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.client_id_prefix">${mqttConnectionClientid}</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <boolProp name="mqtt.client_id_suffix">true</boolProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">true</boolProp>
          <stringProp name="mqtt.keystore_password">${mqttSecret}</stringProp>
          <stringProp name="mqtt.clientcert_password">${mqttSecret}</stringProp>
          <stringProp name="mqtt.port">${mqttPortNum}</stringProp>
          <stringProp name="mqtt.protocol">SSL</stringProp>
          <stringProp name="mqtt.server">${mqttURL}</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <stringProp name="mqtt.user_name">${mqttUsername}</stringProp>
          <stringProp name="mqtt.password">${access_token}</stringProp>
          <stringProp name="mqtt.topic_name">imu_real_time</stringProp>
          <stringProp name="mqtt.qos_level">0</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
  &quot;token&quot;:${access_token},
  &quot;time&quot;:  ${__time},
 &quot;acceleration_vector&quot;:[  
      {  
         &quot;x&quot;:1,
         &quot;y&quot;:2,
         &quot;z&quot;:3,
         &quot;total&quot;:8
      }
   ],
   &quot;angular_velocity_vector&quot;:[  
      {  
         &quot;x&quot;:1,
         &quot;y&quot;:2,
         &quot;z&quot;:3,
         &quot;total&quot;:6
      }
   ],
   &quot;direction_vector&quot;:[  
      {  
         &quot;x&quot;:1,
         &quot;y&quot;:2,
         &quot;z&quot;:3,
         &quot;total&quot;:9
      }
   ],
   &quot;livefeed&quot;:true
}	
</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="crr_acceleration" enabled="true">
          <stringProp name="mqtt.keystore_file_path">${mqttJksFile}</stringProp>
          <stringProp name="mqtt.clientcert_file_path">${mqttP12}</stringProp>
          <stringProp name="mqtt.conn_keep_alive">20</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.client_id_prefix">${mqttConnectionClientid}</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <boolProp name="mqtt.client_id_suffix">true</boolProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">true</boolProp>
          <stringProp name="mqtt.keystore_password">${mqttSecret}</stringProp>
          <stringProp name="mqtt.clientcert_password">${mqttSecret}</stringProp>
          <stringProp name="mqtt.port">${mqttPortNum}</stringProp>
          <stringProp name="mqtt.protocol">SSL</stringProp>
          <stringProp name="mqtt.server">${mqttURL}</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <stringProp name="mqtt.user_name">${mqttUsername}</stringProp>
          <stringProp name="mqtt.password">${access_token}</stringProp>
          <stringProp name="mqtt.topic_name">crr_acceleration</stringProp>
          <stringProp name="mqtt.qos_level">0</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
  &quot;token&quot;:${access_token},
  &quot;time&quot;:  ${__time},
  &quot;acceleration_vector&quot;: [
    {
      &quot;x&quot;: 123.3,
      &quot;y&quot;: 123.3,
      &quot;z&quot;: 123.3,
      &quot;total&quot;: 123
    },
    {
      &quot;x&quot;: 153.3,
      &quot;y&quot;: 143.3,
      &quot;z&quot;: 153.3,
      &quot;total&quot;: 123
    }
  ]
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="crr_imu" enabled="true">
          <stringProp name="mqtt.keystore_file_path">${mqttJksFile}</stringProp>
          <stringProp name="mqtt.clientcert_file_path">${mqttP12}</stringProp>
          <stringProp name="mqtt.conn_keep_alive">20</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.client_id_prefix">${mqttConnectionClientid}</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <boolProp name="mqtt.client_id_suffix">true</boolProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">true</boolProp>
          <stringProp name="mqtt.keystore_password">${mqttSecret}</stringProp>
          <stringProp name="mqtt.clientcert_password">${mqttSecret}</stringProp>
          <stringProp name="mqtt.port">${mqttPortNum}</stringProp>
          <stringProp name="mqtt.protocol">SSL</stringProp>
          <stringProp name="mqtt.server">${mqttURL}</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <stringProp name="mqtt.user_name">${mqttUsername}</stringProp>
          <stringProp name="mqtt.password">${access_token}</stringProp>
          <stringProp name="mqtt.topic_name">crr_imu</stringProp>
          <stringProp name="mqtt.qos_level">0</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
  &quot;token&quot;:${access_token},
  &quot;time&quot;:  ${__time},
  &quot;acceleration_vector&quot;:[  
      {  
         &quot;x&quot;:123.3,
         &quot;y&quot;:123.3,
         &quot;z&quot;:123.3,
         &quot;total&quot;:123
      }
   ],
   &quot;angular_velocity_vector&quot;:[  
      {  
         &quot;x&quot;:0.1233232432234,
         &quot;y&quot;:0.1233232432234,
         &quot;z&quot;:0.1233232432234,
         &quot;total&quot;:0.1233232432234
      }
   ],
   &quot;direction_vector&quot;:[  
      {  
         &quot;x&quot;:0.1233232432234,
         &quot;y&quot;:0.1233232432234,
         &quot;z&quot;:0.1233232432234,
         &quot;total&quot;:0.1233232432234
      }
   ]
}
</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
